name: 'Lint C/C++ with clang-format'

on:
  push:
    branches:
      - dev
      - "release*"
    tags:
      - '*'
  pull_request:

env:
  TARGETS: f7
  FBT_TOOLCHAIN_PATH: /runner/_work
  SET_GH_OUTPUT: 1

jobs:
  lint_sources:
    runs-on: [self-hosted,FlipperZeroShell]
    steps:
      - name: 'Decontaminate previous build leftovers'
        run: |
          if [ -d .git ]; then
            git submodule status || git checkout "$(git rev-list --max-parents=0 HEAD | tail -n 1)"
          fi

      - name: 'Checkout code'
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          submodules: false
          ref: ${{ github.event.pull_request.head.sha }}

      - name: 'Check Python code formatting'
        id: syntax_check_py
        run: ./fbt lint_py 2>&1 >/dev/null || echo "errors=1" >> $GITHUB_OUTPUT

      - name: 'Check C++ code formatting'
        if: always()
        id: syntax_check_cpp
        run: ./fbt lint 2>&1 >/dev/null || echo "errors=1" >> $GITHUB_OUTPUT

      - name: Report code formatting errors
        if: ( steps.syntax_check_py.outputs.errors || steps.syntax_check_cpp.outputs.errors ) && github.event.pull_request
        run: |
          echo "Code formatting errors found"
          echo "Please run './fbt format' or './fbt format_py' to fix them"
          exit 1
